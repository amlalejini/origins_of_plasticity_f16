
##########################################################################################################################
# Analyzes final dominant organisms from Stepping stones experiments.
#  Genotypes/details final dominant organisms
#  Extracts lineage of final dominant organisms
#  Genotypes/details/traces each organism along the lineage
FUNCTION [name]
This will create a function of the given name, including in it all of the commands up until an END is found. These commands will be bound to the function, but are not executed until the function is run as a command. Inside the function, the variables $1 through $9 can be used to access arguments passed in.
##########################################################################################################################

#####################################
# Some variables:
SET s <start_replicate>
SET f <end_replicate>
SET u <final_update>
SET d <base_experiment_directory>
#####################################

##############
# BATCH GUIDE
# 0: Final dominant organism
# 1: Lineage of final dominant organism
# 2: Working batch
##############

FUNCTION RUN_TESTS__NTASKS_1
  # args: [$1: treatment, $2: replicate, $3: environment]
  # Run tests on final dominant organism.
  SET_BATCH 0
  RECALC
  DETAIL analysis/$1_$2/final_dominant/ENV__$3/fdom_details.dat id num_cpus fitness update_born depth viable length copy_length exe_length gest_time sequence task.0
  TRACE analysis/$1_$2/final_dominant/ENV__$3/trace/
  PRINT analysis/$1_$2/final_dominant/ENV__$3/ fdom_print.dat

  # Run tests on lineage final dominant.
  SET_BATCH 1
  RECALC
  DETAIL analysis/$1_$2/final_dominant/ENV__$3/fdom_lineage_details.html id ancestor_dist parent_dist fitness_ratio comp_merit_ratio parent_muts num_cpus fitness update_born depth viable length copy_length exe_length gest_time sequence task.0
  DETAIL analysis/$1_$2/final_dominant/ENV__$3/fdom_lineage_details.dat id ancestor_dist parent_dist fitness_ratio comp_merit_ratio parent_muts num_cpus fitness update_born depth viable length copy_length exe_length gest_time sequence task.0
END

FUNCTION RUN_TESTS__NTASKS_2
  # args: [$1: treatment, $2: replicate, $3: environment]
  # Run tests on final dominant organism.
  SET_BATCH 0
  RECALC
  DETAIL analysis/$1_$2/final_dominant/ENV__$3/fdom_details.dat id num_cpus fitness update_born depth viable length copy_length exe_length gest_time sequence task.0 task.1
  TRACE analysis/$1_$2/final_dominant/ENV__$3/trace/
  PRINT analysis/$1_$2/final_dominant/ENV__$3/ fdom_print.dat

  # Run tests on lineage final dominant.
  SET_BATCH 1
  RECALC
  DETAIL analysis/$1_$2/final_dominant/ENV__$3/fdom_lineage_details.html id ancestor_dist parent_dist fitness_ratio comp_merit_ratio parent_muts num_cpus fitness update_born depth viable length copy_length exe_length gest_time sequence task.0 task.1
  DETAIL analysis/$1_$2/final_dominant/ENV__$3/fdom_lineage_details.dat id ancestor_dist parent_dist fitness_ratio comp_merit_ratio parent_muts num_cpus fitness update_born depth viable length copy_length exe_length gest_time sequence task.0 task.1
END

# NAND+
FUNCTION TEST_ENV___REWARD_NAND
  # args: [$1: treatment, $2: replicate]
  # This function runs tests in NAND+ environment.

  # Setup environment
  SET v REWARD_NAND
  SetReactionValue NAND 1.0

  RUN_TESTS__NTASKS_1 $1 $2 $v
END

# NAND-
FUNCTION TEST_ENV___PUNISH_NAND
  # args: [$1: treatment, $2: replicate]
  # This function runs tests in NAND- environment.

  # Setup environment
  SET v PUNISH_NAND
  SetReactionValue NAND -1.0

  RUN_TESTS__NTASKS_1 $1 $2 $v
END

# NOT+
FUNCTION TEST_ENV___REWARD_NOT
  # args: [$1: treatment, $2: replicate]
  # This function runs tests in NOT+ environment.

  # Setup environment.
  SET v REWARD_NOT
  SetReactionValue NOT 1.0

  RUN_TESTS__NTASKS_1 $1 $2 $v
END

# NOT-
FUNCTION TEST_ENV___PUNISH_NOT
  # args: [$1: treatment, $2: replicate]
  # This function runs tests in NOT- environment.

  # Setup environment.
  SET v PUNISH_NOT
  SetReactionValue NOT -1.0

  RUN_TESTS__NTASKS_1 $1 $2 $v
END

# NAND+ NOT-
FUNCTION TEST_ENV___REWARD_NAND__PUNISH_NOT
  # args: [$1: treatment, $2: replicate]
  # This function runs tests in the NAND+NOT- environment.

  # Setup environment.
  SET v REWARD_NAND__PUNISH_NOT
  SetReactionValue NAND 1.0
  SetReactionValue NOT -1.0

  RUN_TESTS__NTASKS_2 $1 $2 $v
END

# NAND- NOT+
FUNCTION TEST_ENV___REWARD_NOT__PUNISH_NAND
  # args: [$1: treatment, $2: replicate]
  # This function runs tests in the NAND-NOT+ environment.

  # Setup environment.
  SET v REWARD_NOT__PUNISH_NAND
  SetReactionValue NAND -1.0
  SetReactionValue NOT 1.0

  RUN_TESTS__NTASKS_2 $1 $2 $v
END

# NAND+ NOT+
FUNCTION TEST_ENV___REWARD_NAND_NOT
  # args: [$1: treatment, $2: replicate]
  # This function runs tests in the NAND+NOT+ environment.

  # Setup environment.
  SET v REWARD_NAND_NOT
  SetReactionValue NAND 1.0
  SetReactionValue NOT 1.0

  RUN_TESTS_NTASKS_2 $1 $2 $v
END

# NAND- NOT+
FUNCTION TEST_ENV___PUNISH_NAND_NOT
  # args: [$1: treatment, $2: replicate]
  # This function runs tests in the NAND-NOT- environment.

  # Setup environment.
  SET v PUNISH_NAND_NOT
  SetReactionValue -1.0
  SetReactionValue -1.0

  RUN_TESTS_NTASKS_2 $1 $2 $v
END


# For each treatment (will be filled out by script)
FOREACH t <treatments>
  FORRANGE i $s $f
    # For each trial:
    # Do some cleaning
    PURGE_BATCH 0   # Final dominant
    PURGE_BATCH 1   # Final dominant linage
    # Load most final population into batch 0
    SET_BATCH 0
    LOAD $d/data/$t_$i/data/detail-$u.spop
    DUPLICATE 0 1 # Copy population over to batch 1
    # Filter batch 0 down to only final dominant organism
    FIND_GENOTYPE num_cpus
    # Filter batch 1 down to only lineage final dominant organism
    SET_BATCH 1
    FIND_LINEAGE num_cpus

    <environment_tests>

  END
END



  END
END
